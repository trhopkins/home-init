---
- hosts: localhost
  vars:
    mount_src: /dev/sda
    mount_path: /mnt
    hostname: arch
  tasks:
    - name: Abort if host is Archiso
      fail:
        msg: This host is not booted from the Arch installer iso.
      when: ansible_nodename != 'archiso'
    - name: Synchronize clock via NTP
      shell: timedatectl set-ntp true
    - name: Partition boot disk
      block:
        - name: Wipe install drive partitions
          shell: find /dev -wholename "{{ mount_src }}" -exec -wipefs --force --all {} \;
        - name: Create boot partition
          parted:
            device: "{{ mount_src }}"
            label: gpt
            number: 1
            part_end: 512MB
            name: boot
            flags: [boot, esp]
            state: present
        - name: Create swap partition
          parted:
            device: "{{ mount_src }}"
            label: gpt
            number: 2
            part_start: 512MB
            part_end: 8GB
            name: swap
            flags: [swap]
            state: present
        - name: Create root partition
          parted:
            device: "{{ mount_src }}"
            label: gpt
            number: 3
            part_start: 8GB
            part_end: 100%
            name: root
            state: present
    - name: Create EFI filesystem
      filesystem:
        dev: "{{ mount_src }}1"
        fstype: vfat
        opts: -F 32
        force: true
    - name: Create root filesystem
      filesystem:
        dev: "{{ mount_src }}3"
        fstype: btrfs
        opts: -f -L ROOT -m single
        force: true
    - name: Create Btrfs subvolumes
      block:
        - name: Mount root partition for subvolume creation
          command: mount "{{ mount_src }}"3 "{{ mount_path }}"
        - name: Create root subvolume
          command: btrfs subvolume create "{{ mount_path }}/@"
        - name: Create home subvolume
          command: btrfs subvolume create "{{ mount_path }}/@home"
        - name: Create var subvolume
          command: btrfs subvolume create "{{ mount_path }}/@var"
        - name: Create opt subvolume
          command: btrfs subvolume create "{{ mount_path }}/@opt"
        - name: Create tmp subvolume
          command: btrfs subvolume create "{{ mount_path }}/@tmp"
        - name: Create snapshots subvolume
          command: btrfs subvolume create "{{ mount_path }}/@.snapshots"
        - name: Unmount root partition
          command: umount "{{ mount_path }}"
    - name: Mount subvolumes
      block:
        - name: Mount root directory on subvolume
          mount:
            path: "{{ mount_path }}"
            fstype: btrfs
            src: "{{ mount_src }}3"
            opts: noatime,compress=zstd,space_cache,subvol=@,space_cache=v2
            state: mounted
            fstab: /mnt/etc/fstab
        - name: Mount home directory on subvolume
          mount:
            path: "{{ mount_path }}/home"
            fstype: btrfs
            src: "{{ mount_src }}3"
            opts: noatime,compress=zstd,space_cache,subvol=@home
            state: mounted
            fstab: /mnt/etc/fstab
        - name: Mount var directory on subvolume
          mount:
            path: "{{ mount_path }}/var"
            fstype: btrfs
            src: "{{ mount_src }}3"
            opts: subvol=@var
            state: mounted
            fstab: /mnt/etc/fstab
        - name: Mount opt directory on subvolume
          mount:
            path: "{{ mount_path }}/opt"
            fstype: btrfs
            src: "{{ mount_src }}3"
            opts: noatime,compress=zstd,space_cache,subvol=@opt
            state: mounted
            fstab: /mnt/etc/fstab
        - name: Mount snapshot directory on subvolume
          mount:
            path: "{{ mount_path }}/.snapshots"
            fstype: btrfs
            src: "{{ mount_src }}3"
            opts: noatime,compress=zstd,space_cache,subvol=@.snapshots
            state: mounted
            fstab: /mnt/etc/fstab
    - name: Install Arch Linux
      #when: false
      command: >
        pacstrap /mnt
        base
        base-devel
        linux
        linux-firmware
        btrfs-progs
        networkmanager
        intel-ucode
        neovim
        openssh
        grub
        efibootmgr
        reflector
        sudo
        python
        lua
        man-pages
        man-db
        dhcpcd
    - name: Generate filesystem table
      command: genfstab -U "{{ mount_path }}" >> "{{ mount_path }}"/etc/fstab

